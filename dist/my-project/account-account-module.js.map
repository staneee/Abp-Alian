{"version":3,"sources":["webpack:///./node_modules/@angular/http/fesm5/http.js","webpack:///./src/account/account-routing.module.ts","webpack:///./src/account/account.component.html","webpack:///./src/account/account.component.less","webpack:///./src/account/account.component.ts","webpack:///./src/account/account.module.ts","webpack:///./src/account/layout/account-languages.component.html","webpack:///./src/account/layout/account-languages.component.less","webpack:///./src/account/layout/account-languages.component.ts","webpack:///./src/account/login/login.component.html","webpack:///./src/account/login/login.component.less","webpack:///./src/account/login/login.component.ts","webpack:///./src/account/login/login.service.ts","webpack:///./src/account/register/register.component.html","webpack:///./src/account/register/register.component.less","webpack:///./src/account/register/register.component.ts","webpack:///./src/account/tenant-register/tenant-register.component.html","webpack:///./src/account/tenant-register/tenant-register.component.less","webpack:///./src/account/tenant-register/tenant-register.component.ts","webpack:///./src/account/tenant/tenant-change-modal.component.html","webpack:///./src/account/tenant/tenant-change-modal.component.ts","webpack:///./src/account/tenant/tenant-change.component.html","webpack:///./src/account/tenant/tenant-change.component.ts","webpack:///./src/shared/AppEnums.ts","webpack:///./src/shared/animations/routerTransition.ts","webpack:///./src/shared/component-base/app-component-base.ts","webpack:///./src/shared/component-base/modal-component-base.ts","webpack:///./src/shared/helpers/UrlHelper.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAE4E;AACd;AAC5B;AACkB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,+BAA+B;AAC7E,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA,iEAAiE,cAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,kCAAkC,EAAE;AACrF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,6CAA6C,kCAAkC,EAAE;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE,EAAE;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8CAA8C;AAC3F;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2CAA2C;AACvF;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC,sDAAQ,gBAAgB,EAAE;AACnG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yEAAyE;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAe;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI,0BAA0B;AAC9B;AACA,6CAA6C,yBAAyB;AACtE,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA,aAAa,cAAc;AAC3B,IAAI;AACJ;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA,gBAAgB;AAChB,QAAQ;AACR;AACA;AACA,QAAQ;AACR,gDAAgD;AAChD,8CAA8C,YAAY;AAC1D,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA,kDAAkD,sBAAsB;AACxE,wBAAwB,eAAe;AACvC,YAAY,WAAW,YAAY,yBAAyB;AAC5D;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,oEAAoE;AAC/E;AACA,WAAW,IAAI;AACf;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,oCAAoC,8CAA8C;AAClF;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,IAAI;AACJ,8EAA8E;AAC9E,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oFAAoF;AACtH;AACA,0BAA0B,wDAAU;AACpC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAM;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8BAA8B;AACrF,2DAA2D,gCAAgC;AAC3F;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mBAAmB;AAC3E;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,sCAAsC,mCAAmC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF;AACA;AACA;AACA;AACA,yDAAyD,wCAAwC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAyC,mGAAmG,EAAE;AAC9I,SAAS;AACT;AACA;AACA,yDAAyD,8BAA8B;AACvF;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F,4DAA4D,4CAA4C;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,mCAAmC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kEAAkE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,sCAAsC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,gDAAgD;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,MAAM,wBAAwB;AAC9B;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAU;AAC7B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qBAAqB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+CAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iFAAiF;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sDAAsD,EAAE;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4BAA4B;AACjE,qCAAqC,8BAA8B;AACnE;AACA;AACA;AACA;AACA,wBAAwB,yEAAO;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ,4CAA4C;AACpD,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAc;AAClB;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,WAAW,uCAAuC;AAClD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yDAAyD;AACzD,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uCAAuC;AACtD;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR,6DAA6D;AAC7D,gDAAgD;AAChD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,+CAA+C,8CAA8C,EAAE;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA,eAAe;AACf,sBAAsB,cAAc;AACpC;AACA,kDAAkD,qBAAqB;AACvE,wBAAwB,eAAe;AACvC,YAAY,WAAW,qBAAqB,uBAAuB;AACnE;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,yDAAyD;AACzD,4CAA4C;AAC5C,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA,kCAAkC,oDAAoD;AACtF;AACA,yBAAyB,wDAAU;AACnC,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,IAAI,YAAY;AAChB,qFAAqF,WAAW;AAChG;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACbqDAAqD,EAAE;AACrG;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA;AACA;AACA;AACA,+DAA+D,eAAe;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB;AACrB,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,WAAW,YAAY;AACvB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oGAAoG,aAAa;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,wDAAwD;AAChF;AACA,WAAW,yBAAyB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB,QAAQ,gEAAU;AAClB,QAAQ,wDAAU;AAClB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wDAAU;AAC3B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,6EAA6E;AAC9F;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA,iBAAiB,sEAAsE;AACvF;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wDAAU;AAC5B,QAAQ,8DAAQ;AAChB;AACA;AACA;AACA,iBAAiB,iFAAiF;AAClG;AACA,iBAAiB,wDAAwD;AACzE,iBAAiB,0DAA0D;AAC3E;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qDAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEynB;AACznB;;;;;;;;;;;;;;;;;;;;;;;;;;;AC70DsF;AAC7C;AACM;AACU;AACS;AACX;AAsBvD;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QApBhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mEAAgB;wBAE3B,QAAQ,EAAE;4BACR,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;4BAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;4BAClD;gCACE,IAAI,EAAE,iBAAiB;gCACvB,SAAS,EAAE,kGAAuB;6BA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","file":"account-account-module.js","sourcesContent":["/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { __decorate, __metadata, __extends, __read, __spread } from 'tslib';\nimport { Injectable, NgModule, Version } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    BrowserXhr.prototype.build = function () { return (new XMLHttpRequest()); };\n    BrowserXhr = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BrowserXhr);\n    return BrowserXhr;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported http methods.\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[RequestMethod[\"Get\"] = 0] = \"Get\";\n    RequestMethod[RequestMethod[\"Post\"] = 1] = \"Post\";\n    RequestMethod[RequestMethod[\"Put\"] = 2] = \"Put\";\n    RequestMethod[RequestMethod[\"Delete\"] = 3] = \"Delete\";\n    RequestMethod[RequestMethod[\"Options\"] = 4] = \"Options\";\n    RequestMethod[RequestMethod[\"Head\"] = 5] = \"Head\";\n    RequestMethod[RequestMethod[\"Patch\"] = 6] = \"Patch\";\n})(RequestMethod || (RequestMethod = {}));\n/**\n * All possible states in which a connection can be, based on\n * [States](http://www.w3.org/TR/XMLHttpRequest/#states) from the `XMLHttpRequest` spec, but with an\n * additional \"CANCELLED\" state.\n * @deprecated see https://angular.io/guide/http\n */\nvar ReadyState;\n(function (ReadyState) {\n    ReadyState[ReadyState[\"Unsent\"] = 0] = \"Unsent\";\n    ReadyState[ReadyState[\"Open\"] = 1] = \"Open\";\n    ReadyState[ReadyState[\"HeadersReceived\"] = 2] = \"HeadersReceived\";\n    ReadyState[ReadyState[\"Loading\"] = 3] = \"Loading\";\n    ReadyState[ReadyState[\"Done\"] = 4] = \"Done\";\n    ReadyState[ReadyState[\"Cancelled\"] = 5] = \"Cancelled\";\n})(ReadyState || (ReadyState = {}));\n/**\n * Acceptable response types to be associated with a {@link Response}, based on\n * [ResponseType](https://fetch.spec.whatwg.org/#responsetype) from the Fetch spec.\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseType;\n(function (ResponseType) {\n    ResponseType[ResponseType[\"Basic\"] = 0] = \"Basic\";\n    ResponseType[ResponseType[\"Cors\"] = 1] = \"Cors\";\n    ResponseType[ResponseType[\"Default\"] = 2] = \"Default\";\n    ResponseType[ResponseType[\"Error\"] = 3] = \"Error\";\n    ResponseType[ResponseType[\"Opaque\"] = 4] = \"Opaque\";\n})(ResponseType || (ResponseType = {}));\n/**\n * Supported content type to be automatically associated with a {@link Request}.\n * @deprecated see https://angular.io/guide/http\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[ContentType[\"NONE\"] = 0] = \"NONE\";\n    ContentType[ContentType[\"JSON\"] = 1] = \"JSON\";\n    ContentType[ContentType[\"FORM\"] = 2] = \"FORM\";\n    ContentType[ContentType[\"FORM_DATA\"] = 3] = \"FORM_DATA\";\n    ContentType[ContentType[\"TEXT\"] = 4] = \"TEXT\";\n    ContentType[ContentType[\"BLOB\"] = 5] = \"BLOB\";\n    ContentType[ContentType[\"ARRAY_BUFFER\"] = 6] = \"ARRAY_BUFFER\";\n})(ContentType || (ContentType = {}));\n/**\n * Define which buffer to use to store the response\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseContentType;\n(function (ResponseContentType) {\n    ResponseContentType[ResponseContentType[\"Text\"] = 0] = \"Text\";\n    ResponseContentType[ResponseContentType[\"Json\"] = 1] = \"Json\";\n    ResponseContentType[ResponseContentType[\"ArrayBuffer\"] = 2] = \"ArrayBuffer\";\n    ResponseContentType[ResponseContentType[\"Blob\"] = 3] = \"Blob\";\n})(ResponseContentType || (ResponseContentType = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Headers} from '@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Headers = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /** @internal header names are lower case */\n        this._headers = new Map();\n        /** @internal map lower case names to actual names */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    Headers.fromResponseHeaderString = function (headersString) {\n        var headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var index = line.indexOf(':');\n            if (index > 0) {\n                var name_1 = line.slice(0, index);\n                var value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    Headers.prototype.append = function (name, value) {\n        var values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    Headers.prototype.delete = function (name) {\n        var lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    Headers.prototype.forEach = function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    Headers.prototype.get = function (name) {\n        var values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    Headers.prototype.has = function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    Headers.prototype.keys = function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    Headers.prototype.set = function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    Headers.prototype.values = function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    Headers.prototype.toJSON = function () {\n        var _this = this;\n        var serialized = {};\n        this._headers.forEach(function (values, name) {\n            var split = [];\n            values.forEach(function (v) { return split.push.apply(split, __spread(v.split(','))); });\n            serialized[_this._normalizedNames.get(name)] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    Headers.prototype.getAll = function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    Headers.prototype.entries = function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    Headers.prototype.mayBeSetNormalizedName = function (name) {\n        var lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {@link Response Responses} for\n * mock responses (see {@link MockBackend}).\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {ResponseOptions, Response} from '@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    ResponseOptions.prototype.merge = function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Subclass of {@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link ResponseOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create {@link Response Responses}.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {provide} from '@angular/core';\n * import {bootstrap} from '@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {@link Response}\n * object.\n *\n * ### Example\n *\n * ```\n * import {BaseResponseOptions, Response} from '@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    __extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseResponseOptions);\n    return BaseResponseOptions;\n}(ResponseOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {@link Request}.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar ConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nvar isSuccess = function (status) { return (status >= 200 && status < 300); };\nfunction getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\nfunction stringToArrayBuffer(input) {\n    var view = new Uint16Array(input.length);\n    for (var i = 0, strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var map = new Map();\n    if (rawParams.length > 0) {\n        var params = rawParams.split('&');\n        params.forEach(function (param) {\n            var eqIdx = param.indexOf('=');\n            var _a = __read(eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], 2), key = _a[0], val = _a[1];\n            var list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated see https://angular.io/guide/http\n **/\nvar QueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    QueryEncoder.prototype.encodeKey = function (key) { return standardEncoding(key); };\n    QueryEncoder.prototype.encodeValue = function (value) { return standardEncoding(value); };\n    return QueryEncoder;\n}());\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar URLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    URLSearchParams.prototype.clone = function () {\n        var clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    URLSearchParams.prototype.has = function (param) { return this.paramsMap.has(param); };\n    URLSearchParams.prototype.get = function (param) {\n        var storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    URLSearchParams.prototype.getAll = function (param) { return this.paramsMap.get(param) || []; };\n    URLSearchParams.prototype.set = function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.setAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.append = function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.appendAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    URLSearchParams.prototype.replaceAll = function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    URLSearchParams.prototype.toString = function () {\n        var _this = this;\n        var paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) { return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v)); });\n        });\n        return paramsList.join('&');\n    };\n    URLSearchParams.prototype.delete = function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * HTTP request body used by both {@link Request} and {@link Response}\n * https://fetch.spec.whatwg.org/#body\n */\nvar Body = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    Body.prototype.json = function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    Body.prototype.text = function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(this._body));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(this._body));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    Body.prototype.arrayBuffer = function () {\n        if (this._body instanceof ArrayBuffer) {\n            return this._body;\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    Body.prototype.blob = function () {\n        if (this._body instanceof Blob) {\n            return this._body;\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Response = /** @class */ (function (_super) {\n    __extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = responseOptions.status;\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = responseOptions.type;\n        _this.url = responseOptions.url;\n        return _this;\n    }\n    Response.prototype.toString = function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextRequestId = 0;\nvar JSONP_HOME = '__ng_jsonp__';\nvar _jsonpConnections = null;\nfunction _getJsonpConnections() {\n    var w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\n// Make sure not to evaluate this in a non-browser environment!\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    BrowserJsonp.prototype.build = function (url) {\n        var node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    BrowserJsonp.prototype.nextRequestID = function () { return \"__req\" + _nextRequestId++; };\n    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    BrowserJsonp.prototype.exposeConnection = function (id, connection) {\n        var connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    BrowserJsonp.prototype.removeConnection = function (id) {\n        var connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };\n    // Remove <script> element from the DOM\n    BrowserJsonp.prototype.cleanup = function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild((node));\n        }\n    };\n    BrowserJsonp = __decorate([\n        Injectable()\n    ], BrowserJsonp);\n    return BrowserJsonp;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var callback = _dom.requestCallback(_this._id);\n            var url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var script = _this._script = _dom.build(url);\n            var onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    JSONPConnection.prototype.finished = function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * A {@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    __extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    JSONPBackend.prototype.createConnection = function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserJsonp, ResponseOptions])\n    ], JSONPBackend);\n    return JSONPBackend;\n}(ConnectionBackend));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {@link MockConnection} may be interacted with in tests.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var url = getResponseURL(_xhr) || req.url;\n                var statusText = _xhr.statusText || 'OK';\n                var responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var onError = function (err) {\n                var responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(name, values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    XHRConnection.prototype.setDetectedContentType = function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar CookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    CookieXSRFStrategy.prototype.configureRequest = function (req) {\n        var xsrfToken = ɵgetDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * Creates {@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '@angular/http';\n * @Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated see https://angular.io/guide/http\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    XHRBackend.prototype.createConnection = function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [BrowserXhr, ResponseOptions,\n            XSRFStrategy])\n    ], XHRBackend);\n    return XHRBackend;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar RequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    RequestOptions.prototype.merge = function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    RequestOptions.prototype._mergeSearchParams = function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    RequestOptions.prototype._parseParams = function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    RequestOptions.prototype._appendParam = function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Subclass of {@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {@link RequestMethod RequestMethod.Get}\n *  * headers: empty {@link Headers} object\n *\n * This class could be extended and bound to the {@link RequestOptions} class\n * when configuring an {@link Injector}, in order to override the default options\n * used by {@link Http} to create and send {@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    __extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], BaseRequestOptions);\n    return BaseRequestOptions;\n}(RequestOptions));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jeffbcross): properly implement body accessors\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {@link Http} and\n * {@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '@angular/http';\n *\n * @Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Request = /** @class */ (function (_super) {\n    __extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var url = requestOptions.url;\n        _this.url = requestOptions.url;\n        var paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(requestOptions.method);\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = requestOptions.withCredentials;\n        _this.responseType = requestOptions.responseType;\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    Request.prototype.detectContentType = function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    Request.prototype.detectContentTypeFromBody = function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob$1) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer$1) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    Request.prototype.getBody = function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\nfunction urlEncodeParams(params) {\n    var searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar noop = function () { };\nvar w = typeof window == 'object' ? window : noop;\nvar FormData = w /** TODO #9100 */['FormData'] || noop;\nvar Blob$1 = w /** TODO #9100 */['Blob'] || noop;\nvar ArrayBuffer$1 = w /** TODO #9100 */['ArrayBuffer'] || noop;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        }));\n    }\n    return newOptions.merge(new RequestOptions({ method: method, url: url }));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {@link Response} when a\n * response is received.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '@angular/http';\n * import {map} from 'rxjs/operators';\n *\n * @Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .pipe(map(res => res.json()))\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '@angular/http';\n * import {MockBackend} from '@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    Http.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    Http.prototype.get = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    Http.prototype.post = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    Http.prototype.put = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    Http.prototype.delete = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    Http.prototype.patch = function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    Http.prototype.head = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    Http.prototype.options = function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Http);\n    return Http;\n}());\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar Jsonp = /** @class */ (function (_super) {\n    __extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    Jsonp.prototype.request = function (url, options) {\n        var responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp = __decorate([\n        Injectable(),\n        __metadata(\"design:paramtypes\", [ConnectionBackend, RequestOptions])\n    ], Jsonp);\n    return Jsonp;\n}(Http));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\nfunction httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\nfunction jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                BrowserXhr,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                XHRBackend,\n                { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n            ],\n        })\n    ], HttpModule);\n    return HttpModule;\n}());\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated see https://angular.io/guide/http\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule = __decorate([\n        NgModule({\n            providers: [\n                // TODO(pascal): use factory type annotations once supported in DI\n                // issue: https://github.com/angular/angular/issues/3183\n                { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                BrowserJsonp,\n                { provide: RequestOptions, useClass: BaseRequestOptions },\n                { provide: ResponseOptions, useClass: BaseResponseOptions },\n                JSONPBackend,\n            ],\n        })\n    ], JsonpModule);\n    return JsonpModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated see https://angular.io/guide/http\n */\nvar VERSION = new Version('6.1.10');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\n//# sourceMappingURL=http.js.map\n","import { TenantRegisterComponent } from './tenant-register/tenant-register.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountComponent } from './account.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: '',\n        component: AccountComponent,\n\n        children: [\n          { path: 'login', component: LoginComponent },\n          { path: 'register', component: RegisterComponent },\n          {\n            path: 'tenant-register',\n            component: TenantRegisterComponent,\n          },\n        ],\n      },\n    ]),\n  ],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"top\\\">\\n    <div class=\\\"head\\\">\\n      <a [routerLink]=\\\"['/']\\\">\\n        <!-- <img class=\\\"logo\\\" src=\\\"/assets/images/logos/logo-color-shield.svg\\\"> -->\\n        <img class=\\\"logo\\\" src=\\\"/assets/images/logos/logo-txt-color-shield.svg\\\">\\n\\n\\n        <!-- <span class=\\\"title\\\">52ABP</span> -->\\n      </a>\\n    </div>\\n    <p class=\\\"desc\\\">您现在使用的是免费开源版本；欢迎到\\n      <a href=\\\"http://www.52abp.com/\\\" target=\\\"_blank\\\">52ABP.COM</a>了解更多的框架信息\\n    </p>\\n\\n    <div *ngIf=\\\"showTenantChange()\\\">\\n      <tenant-change></tenant-change>\\n    </div>\\n\\n    <!-- <div>\\n      <img class=\\\"logo\\\" src=\\\"/assets/images/52abp_logo.svg\\\">\\n      <img class=\\\"logo\\\" src=\\\"/assets/images/52abp_txt.svg\\\">\\n    </div> -->\\n  </div>\\n\\n  <router-outlet></router-outlet>\\n\\n  <br>\\n  <account-languages></account-languages>\\n\\n  <global-footer [links]=\\\"links\\\">\\n    Copyright\\n    <i class=\\\"anticon anticon-copyright\\\"></i> {{currentYear}}\\n    <b>Version </b>{{versionText}}\\n    <a href=\\\"http://www.52abp.com/\\\" target=\\\"_blank\\\">52ABP.COM</a>出品\\n  </global-footer>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5sZXNzIn0= */\"","import {\n  Component,\n  ViewContainerRef,\n  OnInit,\n  ViewEncapsulation,\n  Injector,\n} from '@angular/core';\nimport { LoginService } from './login/login.service';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\n\n@Component({\n  selector: 'layout-account',\n\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.less'],\n})\nexport class AccountComponent extends AppComponentBase {\n  private viewContainerRef: ViewContainerRef;\n\n  versionText: string;\n  currentYear: number;\n\n  links = [\n    {\n      title: 'ABP',\n      href: '',\n    },\n    {\n      title: '隐私',\n      href: '',\n    },\n    {\n      title: '条款',\n      href: '',\n    },\n  ];\n\n  public constructor(injector: Injector, private _loginService: LoginService) {\n    super(injector);\n    this.currentYear = new Date().getFullYear();\n    this.versionText =\n      this.appSession.application.version +\n      ' [' +\n      this.appSession.application.releaseDate.format('YYYYDDMM') +\n      ']';\n  }\n\n  showTenantChange(): boolean {\n    return abp.multiTenancy.isEnabled;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\n\nimport { AccountRoutingModule } from './account-routing.module';\n\nimport { ServiceProxyModule } from '@shared/service-proxies/service-proxy.module';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { AccountComponent } from './account.component';\nimport { TenantChangeComponent } from './tenant/tenant-change.component';\nimport { TenantChangeModalComponent } from './tenant/tenant-change-modal.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountLanguagesComponent } from './layout/account-languages.component';\n\nimport { LoginService } from './login/login.service';\nimport { NgZorroAntdModule } from 'ng-zorro-antd';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AbpModule } from '@abp/abp.module';\nimport { TenantRegisterComponent } from './tenant-register/tenant-register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    JsonpModule,\n    NgZorroAntdModule,\n    AbpModule,\n    SharedModule,\n    ServiceProxyModule,\n    AccountRoutingModule,\n  ],\n  declarations: [\n    AccountComponent,\n    TenantChangeComponent,\n    TenantChangeModalComponent,\n    LoginComponent,\n    RegisterComponent,\n    AccountLanguagesComponent,\n\n    TenantRegisterComponent,\n  ],\n  entryComponents: [TenantChangeModalComponent],\n  providers: [LoginService],\n})\nexport class AccountModule { }\n","module.exports = \"<ul class=\\\"account-language-switch-list\\\">\\n    <li *ngFor=\\\"let language of languages\\\">\\n        <a *ngIf=\\\"language.name != currentLanguage.name\\\" href=\\\"javascript:void();\\\" title=\\\"{{language.displayName}}\\\" (click)=\\\"changeLanguage(language.name)\\\"><i class=\\\"{{language.icon}}\\\"></i></a>\\n    </li>\\n</ul>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9sYXlvdXQvYWNjb3VudC1sYW5ndWFnZXMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Injector } from '@angular/core';\n\nimport * as _ from 'lodash';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'account-languages',\n  templateUrl: './account-languages.component.html',\n  styleUrls: ['./account-languages.component.less'],\n})\nexport class AccountLanguagesComponent extends AppComponentBase\n  implements OnInit {\n  languages: abp.localization.ILanguageInfo[];\n  currentLanguage: abp.localization.ILanguageInfo;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.languages = _.filter(this.localization.languages, l => !l.isDisabled);\n    this.currentLanguage = this.localization.currentLanguage;\n  }\n\n  changeLanguage(languageName: string): void {\n    abp.utils.setCookieValue(\n      'Abp.Localization.CultureName',\n      languageName,\n      new Date(new Date().getTime() + 5 * 365 * 86400000), // 5 year\n      abp.appPath,\n    );\n\n    location.reload();\n  }\n}\n","module.exports = \"<div [@routerTransition]>\\n  <nz-spin [nzTip]=\\\"l('LogIningWithThreeDot')\\\" [nzSpinning]=\\\"submitting\\\">\\n    <nz-card [nzTitle]=\\\"nzTitle\\\" nzHoverable='true'>\\n      <ng-template #nzTitle>\\n        <div class=\\\"text-center\\\">\\n          <i class=\\\"anticon anticon-login\\\"></i>\\n          <span>{{l('LogIn')}}</span>\\n        </div>\\n      </ng-template>\\n      <form nz-form #loginForm=\\\"ngForm\\\" role=\\\"form\\\" novalidate (ngSubmit)=\\\"login()\\\" method=\\\"post\\\" class=\\\"login-form\\\">\\n        <br>\\n        <!-- 账号 -->\\n        <nz-form-item>\\n          <nz-form-control>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <input nz-input name=\\\"userNameOrEmailAddress\\\" #userNameOrEmailAddressInput=\\\"ngModel\\\" [(ngModel)]=\\\"loginService.authenticateModel.userNameOrEmailAddress\\\"\\n                [placeholder]=\\\"l('UserNameOrEmail')\\\" required maxlength=\\\"255\\\">\\n            </nz-input-group>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 密码 -->\\n        <nz-form-item>\\n          <nz-form-control>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-lock\\\">\\n              <input nz-input name=\\\"password\\\" #passwordInput=\\\"ngModel\\\" [(ngModel)]=\\\"loginService.authenticateModel.password\\\"\\n                [placeholder]=\\\"l('Password')\\\" type=\\\"password\\\" required maxlength=\\\"32\\\">\\n            </nz-input-group>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 记住我 -->\\n\\n        <nz-form-item>\\n          <nz-col [nzSpan]=\\\"12\\\">\\n\\n            <label nz-checkbox [(ngModel)]=\\\"loginService.rememberMe\\\" name=\\\"rememberMe\\\" id=\\\"rememberme\\\">\\n              <span>{{l(\\\"RememberMe\\\")}}</span>\\n            </label>\\n\\n          </nz-col>\\n\\n          <nz-col [nzSpan]=\\\"12\\\" class=\\\"text-right\\\">\\n            <a routerLink=\\\"/account/forgot-password\\\" class=\\\"forgot forget-password\\\">{{l(\\\"ForgotPassword\\\")}}</a>\\n\\n          </nz-col>\\n\\n        </nz-form-item>\\n\\n        <!-- 登陆按钮 -->\\n\\n        <button nz-button [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"submitting\\\" class=\\\"yoyo__block\\\" [disabled]=\\\"!loginForm.form.valid||submitting\\\">\\n          <i class=\\\"anticon anticon-login\\\"></i>\\n          <span>{{l(\\\"LogIn\\\")}}</span>\\n        </button>\\n\\n      </form>\\n      <!-- 注册 -->\\n      <!-- <nz-form-item>\\n        <nz-col [nzSpan]=\\\"12\\\">\\n        </nz-col>\\n        <nz-col [nzSpan]=\\\"12\\\" class=\\\"text-right\\\" *ngIf=\\\"isSelfRegistrationAllowed\\\">\\n          <a [routerLink]=\\\"['../register']\\\">{{l(\\\"Register\\\")}}</a>\\n        </nz-col>\\n      </nz-form-item> -->\\n\\n      <div class=\\\"login-action-items\\\">\\n        <div class=\\\"links\\\">\\n          <!-- 用户注册 -->\\n          <br>\\n          <span *ngIf=\\\"isSelfRegistrationAllowed\\\">\\n            <a routerLink=\\\"/account/register\\\">{{l(\\\"CreateAnAccount\\\")}}</a>\\n            <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n          </span>\\n          <!-- 租户注册 -->\\n          <span *ngIf=\\\"!appSession.tenantId\\\">\\n            <a routerLink=\\\"/account/tenant-register\\\">{{l(\\\"TenantRegister\\\")}}</a>\\n            <nz-divider nzType=\\\"vertical\\\"></nz-divider>\\n          </span>\\n\\n          <!-- //todo: 等待有缘人帮我们完善吧 -->\\n          <!-- <span>\\n            <a routerLink=\\\"/account/email-activation\\\">{{l(\\\"EmailActivation\\\")}}</a>\\n          </span> -->\\n        </div>\\n      </div>\\n\\n\\n    </nz-card>\\n  </nz-spin>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9sb2dpbi9sb2dpbi5jb21wb25lbnQubGVzcyJ9 */\"","import {\n  Component,\n  Injector,\n  ElementRef,\n  ViewChild,\n  OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginService } from './login.service';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\nimport { AbpSessionService } from '@abp/session/abp-session.service';\n\nimport {\n  SessionServiceProxy\n} from '@shared/service-proxies/service-proxies';\nimport { UrlHelper } from '@shared/helpers/UrlHelper';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less'],\n  animations: [appModuleAnimation()],\n})\nexport class LoginComponent extends AppComponentBase implements OnInit {\n  submitting = false;\n\n  constructor(\n    injector: Injector,\n    private fb: FormBuilder,\n    public loginService: LoginService,\n    private _sessionService: AbpSessionService,\n    private _sessionAppService: SessionServiceProxy,\n    private _router: Router,\n  ) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  get multiTenancySideIsTeanant(): boolean {\n    return this.appSession.tenantId > 0;\n  }\n\n  get isSelfRegistrationAllowed(): boolean {\n    if (!this.appSession.tenantId) {\n      return false;\n    }\n    return true;\n  }\n\n  login(): void {\n    this.submitting = true;\n    this.loginService.authenticate(() => {\n      this.submitting = false;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  ExternalLoginProviderInfoModel,\n  ExternalAuthenticateModel,\n} from '@shared/service-proxies/service-proxies';\n\nimport {\n  TokenAuthServiceProxy,\n  AuthenticateModel,\n  AuthenticateResultModel,\n} from '@shared/service-proxies/service-proxies';\nimport { UrlHelper } from '@shared/helpers/UrlHelper';\nimport { AppConsts } from '@shared/AppConsts';\n\nimport * as _ from 'lodash';\nimport { MessageService } from '@abp/message/message.service';\nimport { LogService } from '@abp/log/log.service';\nimport { TokenService } from '@abp/auth/token.service';\nimport { UtilsService } from '@abp/utils/utils.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoginService {\n  static readonly twoFactorRememberClientTokenName =\n    'TwoFactorRememberClientToken';\n\n  authenticateModel: AuthenticateModel;\n  authenticateResult: AuthenticateResultModel;\n\n  rememberMe: boolean;\n\n  constructor(\n    private _tokenAuthService: TokenAuthServiceProxy,\n    private _router: Router,\n    private _utilsService: UtilsService,\n    private _messageService: MessageService,\n    private _tokenService: TokenService,\n    private _logService: LogService,\n  ) {\n    this.clear();\n  }\n\n  authenticate(finallyCallback?: () => void): void {\n    finallyCallback = finallyCallback || (() => { });\n\n    this._tokenAuthService\n      .authenticate(this.authenticateModel)\n      .pipe(finalize(finallyCallback))\n      .subscribe((result: AuthenticateResultModel) => {\n        this.processAuthenticateResult(result);\n      });\n  }\n\n  private processAuthenticateResult(\n    authenticateResult: AuthenticateResultModel,\n  ) {\n    this.authenticateResult = authenticateResult;\n\n    if (authenticateResult.accessToken) {\n      // Successfully logged in\n      // tslint:disable-next-line:max-line-length\n      this.login(\n        authenticateResult.accessToken,\n        authenticateResult.encryptedAccessToken,\n        authenticateResult.expireInSeconds,\n        this.rememberMe,\n      );\n    } else {\n      // Unexpected result!\n\n      this._logService.warn('Unexpected authenticateResult!');\n      this._router.navigate(['account/login']);\n    }\n  }\n\n  private login(\n    accessToken: string,\n    encryptedAccessToken: string,\n    expireInSeconds: number,\n    rememberMe?: boolean,\n  ): void {\n    const tokenExpireDate = rememberMe\n      ? new Date(new Date().getTime() + 1000 * expireInSeconds)\n      : undefined;\n\n    this._tokenService.setToken(accessToken, tokenExpireDate);\n\n    this._utilsService.setCookieValue(\n      AppConsts.authorization.encrptedAuthTokenName,\n      encryptedAccessToken,\n      tokenExpireDate,\n      abp.appPath,\n    );\n\n    let initialUrl = UrlHelper.initialUrl;\n    if (initialUrl.indexOf('/login') > 0) {\n      initialUrl = AppConsts.appBaseUrl;\n    }\n\n    location.href = initialUrl;\n  }\n\n  private clear(): void {\n    this.authenticateModel = new AuthenticateModel();\n    this.authenticateModel.rememberClient = false;\n    this.authenticateResult = null;\n    this.rememberMe = false;\n  }\n}\n","module.exports = \"<div [@routerTransition]>\\n  <nz-spin [nzTip]=\\\"l('Registering')\\\" [nzSpinning]=\\\"saving\\\">\\n    <nz-card [nzTitle]=\\\"nzTitle\\\" nzHoverable='true'>\\n      <ng-template #nzTitle>\\n        <div class=\\\"text-center\\\">\\n          <i class=\\\"anticon anticon-login\\\"></i>\\n          <span>{{l('Register')}}</span>\\n        </div>\\n      </ng-template>\\n      <form nz-form #validateForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n\\n        <br>\\n\\n        <!-- 名 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <input nz-input name=\\\"name\\\" #name='ngModel' [(ngModel)]=\\\"model.name\\\" [placeholder]=\\\"l('Name')\\\" required>\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"name.control.dirty&&name.control.errors\\\">\\n              <ng-container *ngIf=\\\"name.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 姓 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <input nz-input name=\\\"surname\\\" #surname=\\\"ngModel\\\" [(ngModel)]=\\\"model.surname\\\" [placeholder]=\\\"l('Surname')\\\"\\n                required>\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"surname.control.dirty&&surname.control.errors\\\">\\n              <ng-container *ngIf=\\\"surname.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n\\n        <!-- 邮箱 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-mail\\\">\\n              <input nz-input type=\\\"email\\\" name=\\\"emailAddress\\\" #emailAddress=\\\"ngModel\\\" [(ngModel)]=\\\"model.emailAddress\\\"\\n                [placeholder]=\\\"l('EmailAddress')\\\" required email>\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"emailAddress.control.dirty&&emailAddress.control.errors\\\">\\n              <ng-container *ngIf=\\\"emailAddress.control.hasError('email')\\\">{{l('NotEmail')}}</ng-container>\\n              <ng-container *ngIf=\\\"emailAddress.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n\\n        <!-- 用户账号 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <input nz-input name=\\\"userName\\\" #userName=\\\"ngModel\\\" [(ngModel)]=\\\"model.userName\\\" [placeholder]=\\\"l('UserName')\\\"\\n                required maxlength=\\\"32\\\">\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"userName.control.dirty&&userName.control.errors\\\">\\n              <ng-container *ngIf=\\\"userName.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 密码 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-lock\\\">\\n              <input nz-input type=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" type=\\\"password\\\"\\n                [placeholder]=\\\"l('Password')\\\" required maxlength=\\\"32\\\" minlength=\\\"6\\\">\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"password.control.dirty&&password.control.errors\\\">\\n              <ng-container *ngIf=\\\"password.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n              <ng-container *ngIf=\\\"password.control.hasError('minlength')\\\">{{l('MinLength')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 功能按钮 -->\\n        <nz-form-item>\\n          <nz-col [nzSpan]=\\\"12\\\">\\n            <button (click)=\\\"back()\\\" type=\\\"button\\\" nz-button [disabled]=\\\"saving\\\">{{l(\\\"Back\\\")}}</button>\\n          </nz-col>\\n          <nz-col [nzSpan]=\\\"12\\\" class=\\\"text-right\\\">\\n            <button nz-button nzType=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!validateForm.valid||saving\\\">{{l(\\\"Submit\\\")}}</button>\\n          </nz-col>\\n        </nz-form-item>\\n\\n      </form>\\n\\n    </nz-card>\\n  </nz-spin>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQubGVzcyJ9 */\"","import { finalize } from 'rxjs/operators';\nimport {\n  Component,\n  Injector,\n  AfterViewInit,\n  OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators } from '@angular/forms';\n\nimport {\n  AccountServiceProxy,\n  RegisterInput,\n  RegisterOutput,\n} from '@shared/service-proxies/service-proxies';\n\n\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\n\nimport { LoginService } from '../login/login.service';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\n\n@Component({\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.less'],\n  animations: [appModuleAnimation()],\n})\nexport class RegisterComponent extends AppComponentBase implements OnInit {\n\n\n  model: RegisterInput;\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n    private _router: Router,\n    private readonly _loginService: LoginService,\n  ) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    if (!this.appSession.tenant) {\n      this.back();\n      return;\n    }\n    this.model = new RegisterInput();\n  }\n\n  back(): void {\n    this._router.navigate(['/account/login']);\n  }\n\n  save(): void {\n    this.saving = true;\n    this._accountService\n      .register(this.model)\n      .pipe(finalize(() => {\n        this.saving = false;\n      }))\n      .subscribe((result: RegisterOutput) => {\n        if (!result.canLogin) {\n          this.notify.success(this.l('SuccessfullyRegistered'));\n          this._router.navigate(['/login']);\n          return;\n        }\n\n        this.saving = true;\n\n        // Autheticate\n        this._loginService.authenticateModel.userNameOrEmailAddress = this.model.userName;\n        this._loginService.authenticateModel.password = this.model.password;\n        this._loginService.authenticate(() => {\n          this.saving = false;\n        });\n      });\n  }\n\n}\n","module.exports = \"<div [@routerTransition]>\\n  <nz-spin [nzTip]=\\\"l('Registering')\\\" [nzSpinning]=\\\"saving\\\">\\n    <nz-card [nzTitle]=\\\"nzTitle\\\" nzHoverable='true'>\\n      <ng-template #nzTitle>\\n        <div class=\\\"text-center\\\">\\n          <i class=\\\"anticon anticon-login\\\"></i>\\n          <span>{{l('TenantRegister')}}</span>\\n        </div>\\n      </ng-template>\\n\\n      <form nz-form #validateForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\" role=\\\"form\\\" novalidate method=\\\"post\\\">\\n\\n        <br>\\n\\n        <!-- 租户名称 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-cloud\\\">\\n              <input nz-input type=\\\"text\\\" name=\\\"tenancyName\\\" #tenancyName=\\\"ngModel\\\" [(ngModel)]=\\\"model.tenancyName\\\"\\n                [placeholder]=\\\"l('TenancyName')\\\" required>\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"tenancyName.control.dirty&&tenancyName.control.errors\\\">\\n              <ng-container *ngIf=\\\"tenancyName.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n\\n        <!-- 管理员账号 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-user\\\">\\n              <input nz-input name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"model.name\\\" [placeholder]=\\\"l('UserName')\\\"\\n                required maxlength=\\\"32\\\">\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"name.control.dirty&&name.control.errors\\\">\\n              <ng-container *ngIf=\\\"name.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 管理员邮箱 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-mail\\\">\\n              <input nz-input type=\\\"email\\\" name=\\\"adminEmailAddress\\\" #adminEmailAddress=\\\"ngModel\\\" [(ngModel)]=\\\"model.adminEmailAddress\\\"\\n                [placeholder]=\\\"l('AdminEmailAddress')\\\" required email>\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"adminEmailAddress.control.dirty&&adminEmailAddress.control.errors\\\">\\n              <ng-container *ngIf=\\\"adminEmailAddress.control.hasError('email')\\\">{{l('NotEmail')}}</ng-container>\\n              <ng-container *ngIf=\\\"adminEmailAddress.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 管理员密码 -->\\n        <nz-form-item>\\n          <nz-form-control nzHasFeedback>\\n            <nz-input-group nzPrefixIcon=\\\"anticon anticon-lock\\\">\\n              <input nz-input type=\\\"password\\\" name=\\\"tenantAdminPassword\\\" #tenantAdminPassword=\\\"ngModel\\\" [(ngModel)]=\\\"model.tenantAdminPassword\\\"\\n                [placeholder]=\\\"l('Password')\\\" required maxlength=\\\"32\\\" minlength=\\\"6\\\">\\n            </nz-input-group>\\n            <nz-form-explain *ngIf=\\\"tenantAdminPassword.control.dirty&&tenantAdminPassword.control.errors\\\">\\n              <ng-container *ngIf=\\\"tenantAdminPassword.control.hasError('required')\\\">{{l('CanNotNull')}}</ng-container>\\n              <ng-container *ngIf=\\\"tenantAdminPassword.control.hasError('minlength')\\\">{{l('MinLength')}}</ng-container>\\n            </nz-form-explain>\\n          </nz-form-control>\\n        </nz-form-item>\\n\\n        <!-- 功能按钮 -->\\n        <button nz-button [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"saving\\\" class=\\\"yoyo__block\\\" type=\\\"submit\\\" [disabled]=\\\"!validateForm.valid||saving\\\">\\n          <i class=\\\"anticon anticon-login\\\"></i>\\n          <span>{{l(\\\"Register\\\")}}</span>\\n        </button>\\n      </form>\\n\\n      <nz-form-item>\\n        <nz-col [nzSpan]=\\\"12\\\">\\n        </nz-col>\\n        <nz-col [nzSpan]=\\\"12\\\" class=\\\"text-right\\\">\\n          <a (click)=\\\"back()\\\">{{l(\\\"Back\\\")}}</a>\\n        </nz-col>\\n      </nz-form-item>\\n\\n      <p class=\\\"register-protocal\\\" style=\\\"margin-top: 24px;\\\">点击“注册”，即代表你同意<a href=\\\"/\\\" target=\\\"_blank\\\">《服务协议》</a></p>\\n    </nz-card>\\n  </nz-spin>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYWNjb3VudC90ZW5hbnQtcmVnaXN0ZXIvdGVuYW50LXJlZ2lzdGVyLmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit, Injector } from '@angular/core';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'account/login/login.service';\nimport {\n  TenantRegistrationServiceProxy,\n  CreateTenantDto,\n} from '@shared/service-proxies/service-proxies';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tenant-register',\n  templateUrl: './tenant-register.component.html',\n  styleUrls: ['./tenant-register.component.less'],\n  animations: [appModuleAnimation()],\n})\nexport class TenantRegisterComponent extends AppComponentBase\n  implements OnInit {\n  model: CreateTenantDto = new CreateTenantDto();\n\n  constructor(\n    injector: Injector,\n    private _router: Router,\n    private readonly _loginService: LoginService,\n    private readonly _tenantRegisterService: TenantRegistrationServiceProxy,\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {}\n\n  back(): void {\n    this._router.navigate(['/account/login']);\n  }\n\n  save(): void {\n    this.saving = true;\n    this._tenantRegisterService\n      .registerTenantAsync(this.model)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        }),\n      )\n      .subscribe(result => {\n        this.notify.info(this.l('SavedSuccessfully'));\n\n        this.saving = true;\n        abp.multiTenancy.setTenantIdCookie(result.id);\n\n        this._loginService.authenticateModel.userNameOrEmailAddress = this.model.adminEmailAddress;\n        this._loginService.authenticateModel.password = this.model.tenantAdminPassword;\n        this._loginService.authenticate(() => {\n          this.saving = false;\n        });\n      });\n  }\n}\n","module.exports = \"<form nz-form #changeTenantForm=\\\"ngForm\\\" (ngSubmit)=\\\"save()\\\">\\n  <div class=\\\"modal-header\\\">\\n    <div class=\\\"modal-title\\\">\\n      <i class=\\\"anticon anticon-home\\\"></i> {{l(\\\"ChangeTenant\\\")}}\\n    </div>\\n  </div>\\n\\n\\n  <fieldset>\\n    <nz-form-item nz-row>\\n      <nz-form-label nz-col [nzSm]=\\\"4\\\" nzFor=\\\"TenancyName\\\">\\n        {{l(\\\"TenancyName\\\")}}\\n      </nz-form-label>\\n      <nz-form-control nz-col [nzSm]=\\\"20\\\">\\n        <nz-input-group nzPrefixIcon=\\\"anticon anticon-home\\\">\\n          <input nz-input name=\\\"TenancyName\\\" [(ngModel)]=\\\"tenancyName\\\" type=\\\"text\\\" [placeholder]=\\\"l('TenancyName')\\\" />\\n        </nz-input-group>\\n        <span class=\\\"text-sm text-grey\\\">{{l(\\\"LeaveEmptyToSwitchToHost\\\")}}</span>\\n\\n      </nz-form-control>\\n    </nz-form-item>\\n  </fieldset>\\n\\n  <div class=\\\"modal-footer\\\">\\n    <button nz-button [nzType]=\\\"'default'\\\" type=\\\"button\\\" (click)=\\\"close()\\\" [disabled]=\\\"saving\\\">\\n      <i class=\\\"anticon anticon-close-circle-o\\\"></i> {{l(\\\"Cancel\\\")}}\\n    </button>\\n    <button nz-button [nzType]=\\\"'primary'\\\" type=\\\"submit\\\" [disabled]=\\\"!changeTenantForm.form.valid\\\" [disabled]=\\\"saving\\\"\\n      [nzLoading]=\\\"saving\\\">\\n      <i class=\\\"anticon anticon-save\\\"></i> {{l(\\\"Save\\\")}}\\n    </button>\\n  </div>\\n\\n\\n\\n</form>\"","import {\n  Component,\n  OnInit,\n  Injector,\n  Input,\n} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AccountServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { IsTenantAvailableInput } from '@shared/service-proxies/service-proxies';\nimport { AppTenantAvailabilityState } from '@shared/AppEnums';\nimport { ModalComponentBase } from '@shared/component-base/modal-component-base';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tenant-change-modal',\n  templateUrl: './tenant-change-modal.component.html',\n})\nexport class TenantChangeModalComponent extends ModalComponentBase\n  implements OnInit {\n  @Input()\n  tenancyName = '';\n  beforeTenancyName = '';\n  saving = false;\n\n  constructor(\n    injector: Injector,\n    private _accountService: AccountServiceProxy,\n  ) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    this.beforeTenancyName = this.tenancyName;\n  }\n\n  save(): void {\n    this.saving = true;\n    if (this.tenancyName === this.beforeTenancyName) {\n      this.close();\n      return;\n    }\n    if (!this.tenancyName || this.tenancyName === '') {\n      abp.multiTenancy.setTenantIdCookie(undefined);\n      this.close();\n      location.reload();\n      return;\n    }\n\n    const input = new IsTenantAvailableInput();\n    input.tenancyName = this.tenancyName;\n\n    this._accountService\n      .isTenantAvailable(input)\n      .pipe(finalize(() => {\n        this.saving = false;\n      }))\n      .subscribe(result => {\n        switch (result.state) {\n          case AppTenantAvailabilityState.Available:\n            abp.multiTenancy.setTenantIdCookie(result.tenantId);\n            this.success();\n            location.reload();\n            return;\n          case AppTenantAvailabilityState.InActive:\n            this.message.warn(this.l('TenantIsNotActive', this.tenancyName));\n            break;\n          case AppTenantAvailabilityState.NotFound: // NotFound\n            this.message.warn(\n              this.l('ThereIsNoTenantDefinedWithName{0}', this.tenancyName),\n            );\n            break;\n        }\n      });\n  }\n}\n","module.exports = \"<div *ngIf=\\\"isMultiTenancyEnabled\\\" class=\\\"card tenant-change-component\\\" style=\\\"margin-bottom: 3px;\\\">\\n  <div class=\\\"body text-center\\\">\\n    <span>\\n      {{l(\\\"CurrentTenant\\\")}}:\\n      <span *ngIf=\\\"tenancyName\\\" title=\\\"{{name}}\\\">\\n        <strong>{{tenancyName}}</strong>\\n      </span>\\n      <span *ngIf=\\\"!tenancyName\\\">{{l(\\\"NotSelected\\\")}}</span>\\n      (\\n      <a href=\\\"javascript:void();\\\" (click)=\\\"showChangeModal()\\\">{{l(\\\"Change\\\")}}</a>)\\n    </span>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\nimport { AccountServiceProxy } from '@shared/service-proxies/service-proxies';\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\nimport { TenantChangeModalComponent } from './tenant-change-modal.component';\n\n@Component({\n    selector: 'tenant-change',\n    templateUrl: './tenant-change.component.html',\n})\nexport class TenantChangeComponent extends AppComponentBase implements OnInit {\n    tenancyName: string;\n    name: string;\n\n    constructor(injector: Injector) {\n        super(injector);\n    }\n\n    ngOnInit() {\n        if (this.appSession.tenant) {\n            this.tenancyName = this.appSession.tenant.tenancyName;\n            this.name = this.appSession.tenant.name;\n        }\n    }\n\n    get isMultiTenancyEnabled(): boolean {\n        return abp.multiTenancy.isEnabled;\n    }\n\n    showChangeModal(): void {\n        this.modalHelper\n            .open(\n                TenantChangeModalComponent,\n                { tenancyName: this.tenancyName },\n                'md',\n                {\n                    nzMask: true,\n                },\n        )\n            .subscribe(() => { });\n    }\n}\n","import { IsTenantAvailableOutputState } from '@shared/service-proxies/service-proxies';\r\n\r\nexport class AppTenantAvailabilityState {\r\n  static Available: number = IsTenantAvailableOutputState._1;\r\n  static InActive: number = IsTenantAvailableOutputState._2;\r\n  static NotFound: number = IsTenantAvailableOutputState._3;\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function appModuleAnimation() {\r\n    return slideFromBottom();\r\n}\r\n\r\nexport function accountModuleAnimation() {\r\n    return slideFromUp();\r\n}\r\n\r\nexport function slideFromBottom() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({ 'padding-top': '20px', opacity: '0' })),\r\n        state('*', style({ 'padding-top': '0px', opacity: '1' })),\r\n        transition(':enter', [\r\n            animate('0.33s ease-out', style({ opacity: '1', 'padding-top': '0px' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideFromUp() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({ 'margin-top': '-10px', opacity: '0' })),\r\n        state('*', style({ 'margin-top': '0px', opacity: '1' })),\r\n        transition(':enter', [\r\n            animate('0.2s ease-out', style({ opacity: '1', 'margin-top': '0px' }))\r\n        ])\r\n    ]);\r\n}\r\n","import { Injector, ElementRef } from '@angular/core';\r\nimport { AppConsts } from '@shared/AppConsts';\r\nimport { AppSessionService } from '@shared/session/app-session.service';\r\nimport { LocalizationService } from '@abp/localization/localization.service';\r\nimport { PermissionCheckerService } from '@abp/auth/permission-checker.service';\r\nimport { FeatureCheckerService } from '@abp/features/feature-checker.service';\r\nimport { NotifyService } from '@abp/notify/notify.service';\r\nimport { SettingService } from '@abp/settings/setting.service';\r\nimport { MessageService } from '@abp/message/message.service';\r\nimport { AbpMultiTenancyService } from '@abp/multi-tenancy/abp-multi-tenancy.service';\r\nimport { ModalHelper } from '@delon/theme';\r\n\r\nexport abstract class AppComponentBase {\r\n  localizationSourceName = AppConsts.localization.defaultLocalizationSourceName;\r\n\r\n  localization: LocalizationService;\r\n  permission: PermissionCheckerService;\r\n  feature: FeatureCheckerService;\r\n  notify: NotifyService;\r\n  setting: SettingService;\r\n  message: MessageService;\r\n  multiTenancy: AbpMultiTenancyService;\r\n  appSession: AppSessionService;\r\n  elementRef: ElementRef;\r\n  modalHelper: ModalHelper;\r\n\r\n  /**\r\n   * 保存状态\r\n   */\r\n  saving = false;\r\n\r\n  constructor(injector: Injector) {\r\n    this.localization = injector.get(LocalizationService);\r\n    this.permission = injector.get(PermissionCheckerService);\r\n    this.feature = injector.get(FeatureCheckerService);\r\n    this.notify = injector.get(NotifyService);\r\n    this.setting = injector.get(SettingService);\r\n    this.message = injector.get(MessageService);\r\n    this.multiTenancy = injector.get(AbpMultiTenancyService);\r\n    this.appSession = injector.get(AppSessionService);\r\n    this.elementRef = injector.get(ElementRef);\r\n    this.modalHelper = injector.get(ModalHelper);\r\n  }\r\n\r\n  l(key: string, ...args: any[]): string {\r\n    let localizedText = this.localization.localize(\r\n      key,\r\n      this.localizationSourceName,\r\n    );\r\n\r\n    if (!localizedText) {\r\n      localizedText = key;\r\n    }\r\n\r\n    if (!args || !args.length) {\r\n      return localizedText;\r\n    }\r\n\r\n    args.unshift(localizedText);\r\n    return abp.utils.formatString.apply(this, args);\r\n  }\r\n\r\n  isGranted(permissionName: string): boolean {\r\n    return this.permission.isGranted(permissionName);\r\n  }\r\n}\r\n","import { Injector, ElementRef } from '@angular/core';\r\nimport { NzModalRef } from 'ng-zorro-antd';\r\nimport { AppComponentBase } from '@shared/component-base/app-component-base';\r\n\r\n/**\r\n *\r\n *基于模态框弹出 Form表单提交的基类信息\r\n */\r\n\r\nexport abstract class ModalComponentBase extends AppComponentBase {\r\n  title = '';\r\n  nzModalRef: NzModalRef;\r\n\r\n  /**\r\n   * 构造函数\r\n   * @param injector 注入器\r\n   * @param _nzModalRef nzModal 模态框关闭、销毁等处理帮助，只能在modal中打开的组件中注入，非modal打开的组件注入null即可，否则报错。因为nzModalRef是建立在nzModalComponent之上的。\r\n   */\r\n  constructor(injector: Injector) {\r\n    super(injector);\r\n    this.nzModalRef = injector.get(NzModalRef);\r\n  }\r\n  /**\r\n   * 带参数回传关闭\r\n   * @param result 回传参数\r\n   */\r\n  success(result: any = true) {\r\n    if (result) {\r\n      this.nzModalRef.close(result);\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  close($event?: MouseEvent): void {\r\n    this.nzModalRef.close();\r\n  }\r\n}\r\n","export class UrlHelper {\r\n  /**\r\n   * The URL requested, before initial routing.\r\n   */\r\n  static readonly initialUrl = location.href;\r\n\r\n  static getQueryParameters(): any {\r\n    return document.location.search\r\n      .replace(/(^\\?)/, '')\r\n      .split('&')\r\n      .map(\r\n        function(n) {\r\n          return (n = n.split('=')), (this[n[0]] = n[1]), this;\r\n        }.bind({}),\r\n      )[0];\r\n  }\r\n}\r\n"],"sourceRoot":""}